<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HTB-Devvortex</title>
    <link href="/2025/06/21/HTB-Devvortex/"/>
    <url>/2025/06/21/HTB-Devvortex/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HTB-Paper</title>
    <link href="/2025/04/20/HTB-Paper/"/>
    <url>/2025/04/20/HTB-Paper/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/paper-htb/paperhtb.png"></p><h1 id="Box-Info"><a href="#Box-Info" class="headerlink" title="Box Info"></a>Box Info</h1><table><thead><tr><th>OS</th><th>Linux</th></tr></thead><tbody><tr><td>Difficulty</td><td>Easy</td></tr></tbody></table><h1 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h1><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap:"></a>Nmap:</h2><p>We start by scanning ports:</p><p><img src="/img/paper-htb/nmap.png"></p><p>The <strong>Nmap scan</strong> reveals three open ports on <strong>paper.htb (10.10.11.143)</strong>:</p><ul><li><strong>Port 22 (SSH)</strong> </li><li><strong>Port 80 (HTTP)</strong> </li><li><strong>443 (HTTPS)</strong></li></ul><p> Add :  paper.htb to  <strong>&#x2F;etc&#x2F;hosts</strong>:</p> <figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">10.10.11.143</span>    paper.htb<br></code></pre></td></tr></table></figure><p>Port 80 show a website:</p><p><img src="/img/paper-htb/website-http.png"></p><p>After conducting some initial enumeration, I did not discover any particularly interesting files or directories. However, I noticed a response header named <code>X-Backend-Server</code> which revealed a domain: <code>office.paper</code></p><p><img src="/img/paper-htb/curl.png"></p><p>We add it into our hosts file:</p><p><img src="/img/paper-htb/hosts.png"></p><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>After visiting the website we see multiple posts, and we also see in the footer that it is a WordPress site.</p><p><img src="/img/paper-htb/office-paper.png"></p><p>A review of the page’s source code revealed that the application is using WordPress version 5.2.3 (alternatively, we could use WPScan to enumerate and confirm the version).</p><p><img src="/img/paper-htb/wordpress.png"></p><p>Upon reviewing the WordPress 5.2.3 version and its known vulnerabilities, we identified CVE-2019-17671, which allows viewing private posts or drafts without proper authorization. The following PoC illustrates this issue.</p><p><a href="https://0day.work/proof-of-concept-for-wordpress-5-2-3-viewing-unauthenticated-posts/">https://0day.work/proof-of-concept-for-wordpress-5-2-3-viewing-unauthenticated-posts/</a></p><p><img src="/img/paper-htb/wordpress-exploit.png"></p><p>According to the vulnerability details, it’s possible to leak the content of private posts or drafts by appending <code>?static=1</code> to the URL.</p><p><img src="/img/paper-htb/static.png"></p><p>Discovered a new subdomain: <code>chat.office.paper</code>:</p><p><img src="/img/paper-htb/hidden-url.png"></p><p>We add it into our hosts file:</p><p><img src="/img/paper-htb/newhost.png"></p><h2 id="Rocket-chat"><a href="#Rocket-chat" class="headerlink" title="Rocket.chat:"></a>Rocket.chat:</h2><p>The registration URL takes us to the chat system <code>rocket.chat</code>.</p><p><img src="/img/paper-htb/rocket-chat.png"></p><p>After entering we see the only channel, <strong>#general</strong>.<br>Within the channel, multiple messages were visible, some of which mentioned a bot and listed the commands it accepts. Based on this, we initiated a conversation with the bot to further explore its functionality.</p><p><img src="/img/paper-htb/general.png"><br>We sent the <code>help</code> command to the bot, which returned a list of available commands. Among them, two stood out as particularly interesting: <code>file</code> and <code>list</code>.<br><img src="/img/paper-htb/help-bot.png"></p><p><img src="/img/paper-htb/list-cmd.png"></p><p>We perform an enumeration of files within the directory using <code>../</code>we see multiple directories&#x2F;files in <code>home/dwight</code>.</p><p><img src="/img/paper-htb/homedir.png"></p><p>Inside the <code>hubot/</code> directory, we found configuration files and the bot’s source code. Notably, the <code>.env</code> file contained the bot’s configuration details, including credentials.</p><p><img src="/img/paper-htb/config.png"></p><p>We use the password via SSH with the user <code>dwight</code>, we manage to obtain a shell and the flag <code>user.txt</code>.</p><p><img src="/img/paper-htb/ssh.png"></p><h2 id="Privilege-escalation"><a href="#Privilege-escalation" class="headerlink" title="Privilege escalation:"></a>Privilege escalation:</h2><p>It’s time to escalate our privileges to the root user. To begin, we need to enumerate the system for further information. After downloading <code>linpeas.sh</code>, the script revealed that the system is vulnerable to CVE-2021-3560.</p><p><img src="/img/paper-htb/cvepriv.png"></p><p>According to this <a href="https://github.blog/security/vulnerability-research/privilege-escalation-polkit-root-on-linux-with-bug/">GitHub blog post</a>, CVE-2021-3560 is a vulnerability in PolKit (PolicyKit), a system service used to manage permissions. The flaw allows an attacker with limited access to gain root privileges. By exploiting this vulnerability, the attacker can trick the system into creating a new superuser account or escalating their own privileges to root, bypassing security restrictions that would normally prevent this.</p><p>To exploit this vulnerability, we will use a script that automates the process. The script, available on <a href="https://github.com/secnigma/CVE-2021-3560-Polkit-Privilege-Esclation">GitHub</a></p><p>After downloading the script from GitHub, we used <code>wget</code> to send it to the target system, where it could be executed to exploit the vulnerability.</p><p><img src="/img/paper-htb/exploit.png"></p><p><img src="/img/paper-htb/sendexploit.png"></p><p>We ran the script, and the execution was successful:</p><p><img src="/img/paper-htb/runexploit.png"></p><p>We switched the user to <code>secnigma</code> by exploiting the Polkit vulnerability and then ran <code>sudo bash</code>, which granted us a root shell</p><p><img src="/img/paper-htb/secnigma.png"></p><p>Finally, we accessed and retrieved the root flag.</p><p><img src="/img/paper-htb/root.png"></p><h2 id="Thanks-For-Reading"><a href="#Thanks-For-Reading" class="headerlink" title="Thanks For Reading"></a>Thanks For Reading</h2><p><img src="/img/paper-htb/Ghibli3.gif"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
